/// <reference types="cypress" />

/* Qual a diferenÃ§a entre o timeout e o wait */
// O timeout define o tempo de espera para uma determinada aÃ§Ã£o, enquanto o wait define o tempo de espera para um elemento especÃ­fico.

describe('Teste Utilizando Wait Timeout', () => {
    it('Utilizando Wait e Timeout', () => {
        cy.visit('/');
/* Vamos ver a diferenca entre o timeout e o wait  com o html do campo de pesquisa */

        cy.get('input[id="search"]').should('be.visible').type('Cypress'); // o timeout define o tempo de espera para a acao de digitar na pesquisa, enquanto o wait define o tempo de espera para o elemento especifico de pesquisa.
        cy.get('input[id="search"]').should('be.visible').type('Cypress').wait(3000).should('have.value', 'Cypress'); // o wait define o tempo de espera para o elemento especifico de pesquisa.



        // Comandos de pesquisa do google
        cy.get('#APjFqb') // O #APjFqb representa o campo de pesquisa do google foi modo responsivo e o wait define o tempo de espera para o elemento especifico de pesquisa.
        .should('be.visible').type('AutomaÃ§Ã£o de Testes').wait(3000).should('have.value', 'AutomaÃ§Ã£o de Testes');


        // BotÃ£o de pesquisa do google
        /* Vamos ver a diferenca entre o timeout e o wait com o html do botÃ£o de pesquisa */
        cy.get('.FPdoLc > center > .gNO89b' , {timeout: 30000}) // O .FPdoLc > center > .gNO89b representa o botÃ£o de pesquisa do google foi modo responsivo e o wait define o tempo de espera para o elemento especifico de pesquisa.
        .should('be.visible').click({force: true})

 
         
    
       
    })
})


/* 
ğŸ§  Conceitos bÃ¡sicos
âœ… timeout
Ã‰ o tempo mÃ¡ximo que o Cypress vai esperar atÃ© que uma aÃ§Ã£o ou condiÃ§Ã£o seja satisfeita.
Exemplo: esperar atÃ© que um elemento apareÃ§a na tela, ou que um texto esteja visÃ­vel.
Ã‰ configurado com:

cy.get('input[name="pesquisa"]', { timeout: 30000 }) // espera atÃ© 30 segundos o input aparecer
âœ… wait
wait Ã© um comando explÃ­cito de espera.

VocÃª pode usar:
    cy.wait(3000) â†’ espera 3 segundos, sem verificar nada.
    cy.wait('@alias') â†’ espera uma requisiÃ§Ã£o XHR ou interceptaÃ§Ã£o de rede terminar.
Muito usado para garantir que algo carregou no backend antes de continuar.

ğŸ“Š ComparaÃ§Ã£o direta
Conceito	timeout	wait

O que Ã©? Tempo mÃ¡ximo para uma aÃ§Ã£o automÃ¡tica	Espera explÃ­cita e manual

Quando usar? Quando Cypress precisa verificar algo	Quando vocÃª precisa pausar ou aguardar algo

Exemplo	cy.get('.botao', { timeout: 10000 })	cy.wait(3000) ou cy.wait('@getDados')

RecomendaÃ§Ãµes	Ideal para esperar elementos aparecerem	Evite usar com tempo fixo; prefira intercepts

ğŸ’¡ Exemplo prÃ¡tico:
Imagine um campo de pesquisa que aparece com atraso apÃ³s o carregamento:

Espera atÃ© 30 segundos para o input aparecer
    y.get('input[name="pesquisa"]', { timeout: 30000 }).type('exemplo')

Agora, com wait:
Espera 3 segundos fixos antes de procurar o input
    cy.wait(3000)
    cy.get('input[name="pesquisa"]').type('exemplo')
    
DiferenÃ§a-chave:
Com timeout, o Cypress verifica repetidamente se o elemento apareceu atÃ© o tempo mÃ¡ximo (de forma inteligente).

Com wait, o Cypress apenas espera aquele tempo, mesmo que o elemento jÃ¡ tenha carregado antes.

âœ… Boas prÃ¡ticas:
Prefira timeout ajustado ao invÃ©s de cy.wait(3000) para deixar os testes mais rÃ¡pidos e resilientes.

Use cy.wait('@alias') com cy.intercept() para sincronizar com requisiÃ§Ãµes reais da aplicaÃ§Ã£o.
         */